---
import Layout from '../layouts/Layout.astro'

// Import servicios content from Tina CMS
import serviciosContent from '../content/servicios/servicios.json'

const {
  seo,
  hero,
  servicePackages,
  faqSection
} = serviciosContent

const { packages, packInevitable, customProjects } = servicePackages

const baseUrl = 'https://redactorseo.es'
---

<Layout title={seo.title} description={seo.description}>
  <Fragment slot="head">
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@graph": [
        {
          "@type": "BreadcrumbList",
          "itemListElement": [
            {
              "@type": "ListItem",
              "position": 1,
              "name": "Inicio",
              "item": baseUrl
            },
            {
              "@type": "ListItem",
              "position": 2,
              "name": "Servicios",
              "item": `${baseUrl}/servicios`
            }
          ]
        },
        {
          "@type": "ItemList",
          "name": "Servicios de Redacción SEO",
          "description": "Servicios profesionales de redacción web, SEO y copywriting",
          "url": `${baseUrl}/servicios`,
          "numberOfItems": packages.length + 1,
          "itemListElement": [
            ...packages.map((service, index) => ({
              "@type": "ListItem",
              "position": index + 1,
              "item": {
                "@type": "Service",
                "name": service.title,
                "description": service.subtitle,
                "url": `${baseUrl}${service.ctaLink}`,
                "provider": {
                  "@type": "ProfessionalService",
                  "name": "Redactor Seo",
                  "url": baseUrl
                },
                "serviceType": "Redacción SEO",
                "areaServed": {
                  "@type": "Country",
                  "name": "España"
                },
                "offers": {
                  "@type": "Offer",
                  "price": service.price,
                  "priceCurrency": "EUR",
                  "availability": "https://schema.org/InStock"
                }
              }
            })),
            {
              "@type": "ListItem",
              "position": packages.length + 1,
              "item": {
                "@type": "Service",
                "name": packInevitable.title,
                "description": packInevitable.subtitle,
                "url": `${baseUrl}${packInevitable.ctaLink}`,
                "provider": {
                  "@type": "ProfessionalService",
                  "name": "Redactor Seo",
                  "url": baseUrl
                },
                "serviceType": "Redacción SEO",
                "areaServed": {
                  "@type": "Country",
                  "name": "España"
                },
                "offers": {
                  "@type": "Offer",
                  "price": packInevitable.currentPrice.replace('€', ''),
                  "priceCurrency": "EUR",
                  "availability": "https://schema.org/InStock"
                }
              }
            }
          ]
        },
        {
          "@type": "FAQPage",
          "mainEntity": faqSection.questions.map(faq => ({
            "@type": "Question",
            "name": faq.question,
            "acceptedAnswer": {
              "@type": "Answer",
              "text": faq.answer
            }
          }))
        }
      ]
    })} />
  </Fragment>
  <!-- Hero Section -->
  <section class="relative py-16 md:py-20 lg:py-24 bg-white overflow-hidden">
    <!-- Subtle background elements -->
    <div class="absolute inset-0">
      <div class="absolute top-20 right-20 w-32 h-32 bg-gray-50 rounded-full -z-10"></div>
      <div class="absolute bottom-32 left-16 w-20 h-20 bg-naranja-vibrante/5 rounded-full -z-10"></div>
    </div>

    <div class="relative px-4 sm:px-6 lg:px-12 xl:px-16 w-full">
      <div class="max-w-3xl mx-auto text-center">
        <!-- H1 principal -->
        <div class="mb-8 lg:mb-12">
          <h1 class="text-sm font-medium tracking-wide text-gray-500 uppercase">SERVICIOS DE REDACCIÓN SEO PROFESIONAL</h1>
        </div>

        <p class="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 leading-tight mb-8 lg:mb-12">
          {hero.titlePart1}
          <span class="block text-naranja-vibrante mt-4">{hero.titlePart2}</span>
        </p>

        <p class="text-xl md:text-2xl text-gray-600 leading-relaxed mb-12 lg:mb-16 max-w-2xl mx-auto">
          {hero.description}
        </p>
      </div>
    </div>
  </section>

  <!-- Services Grid -->
  <section class="py-20 md:py-32 lg:py-40 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-12 xl:px-16">

      <!-- Pack Inevitable - Horizontal Card -->
      <div class="max-w-5xl mx-auto mb-16 animate-on-scroll opacity-0 translate-y-8 transition-all duration-700 delay-100">
        <div class="bg-white border-2 border-naranja-vibrante rounded-2xl p-8 md:p-10 hover:shadow-2xl transition-all duration-300 relative">
          <!-- Pack Label -->
          <div class="absolute -top-3 left-1/2 transform -translate-x-1/2">
            <span class="bg-naranja-vibrante text-white text-xs font-bold px-4 py-1.5 rounded-full uppercase tracking-wide">
              {packInevitable.packLabel}
            </span>
          </div>

          <div class="flex flex-col lg:flex-row gap-8">
            <!-- Left Side: Info -->
            <div class="flex-1">
              <div class="text-center lg:text-left mb-8">
                <h3 class="text-3xl md:text-4xl font-bold text-gray-900 mb-3">{packInevitable.title}</h3>
                <p class="text-xl text-gray-600 mb-8">{packInevitable.subtitle}</p>
              </div>

              <!-- Qué consigues -->
              <div class="mb-6">
                <h4 class="text-sm font-bold text-gray-900 uppercase tracking-wide mb-3">Qué consigues:</h4>
                <div class="space-y-2">
                  {packInevitable.benefits.map((benefit) => (
                    <div class="flex items-start space-x-3">
                      <svg class="w-5 h-5 text-naranja-vibrante flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                      </svg>
                      <span class="text-gray-700">{benefit}</span>
                    </div>
                  ))}
                </div>
              </div>

              <!-- Qué incluye -->
              <div>
                <h4 class="text-sm font-bold text-gray-900 uppercase tracking-wide mb-3">Qué incluye:</h4>
                <div class="space-y-2">
                  {packInevitable.features.map((feature) => (
                    <div class="flex items-start space-x-3">
                      <span class="text-gray-400 text-lg flex-shrink-0">•</span>
                      <span class="text-gray-700">{feature}</span>
                    </div>
                  ))}
                </div>
              </div>
            </div>

            <!-- Right Side: Pricing & CTA -->
            <div class="lg:w-80 flex flex-col justify-center">
              <div class="bg-gray-50 border-2 border-gray-200 rounded-xl p-6 mb-6">
                <div class="space-y-3">
                  <div class="flex justify-between items-center">
                    <span class="text-gray-900 font-bold">PRECIO:</span>
                    <span class="text-3xl font-bold text-azul-profundo">{packInevitable.currentPrice.replace('€', '')}<span class="text-2xl">€</span></span>
                  </div>
                  <div class="flex justify-between items-center">
                    <span class="text-gray-600 font-medium text-sm">VALOR:</span>
                    <span class="text-gray-500 line-through text-2xl">{packInevitable.originalPrice}</span>
                  </div>
                  <div class="border-t-2 border-gray-300 my-2"></div>
                  <div class="flex justify-between items-center">
                    <span class="text-naranja-vibrante font-medium">AHORRAS:</span>
                    <span class="text-2xl font-medium text-naranja-vibrante">{packInevitable.savings.replace('€', '')}<span class="text-xl">€</span></span>
                  </div>
                </div>
              </div>

              <a
                href={packInevitable.ctaLink}
                class="w-full inline-flex items-center justify-center bg-naranja-vibrante text-white px-8 py-4 rounded-xl text-lg font-bold hover:bg-naranja-vibrante-hover hover:scale-105 transition-all duration-300 shadow-lg uppercase tracking-wide"
              >
                {packInevitable.ctaText}
                <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </a>
            </div>
          </div>
        </div>
      </div>

      <!-- Two Column Grid for Services -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto mb-16">
        {packages.map((service, index) => (
          <div class={`animate-on-scroll opacity-0 translate-y-8 transition-all duration-700 delay-${(index + 2) * 100} bg-white p-8 rounded-2xl border border-gray-200 hover:shadow-xl hover:-translate-y-1 transition-all duration-300 group`}>
            <div class="text-center mb-8">
              <h3 class="text-2xl font-bold text-gray-900 mb-3">{service.title}</h3>
              <p class="text-gray-600 mb-6 leading-relaxed">{service.subtitle}</p>
              <div class="text-4xl font-bold text-azul-profundo mb-2">{service.price}<span class="text-2xl">{service.currency}</span></div>
              {service.priceNote && <p class="text-sm text-gray-500">{service.priceNote}</p>}
            </div>

            <div class="space-y-3 mb-8">
              {service.features.map((feature) => (
                <div class="flex items-start space-x-3">
                  <svg class="w-5 h-5 text-naranja-vibrante flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                  </svg>
                  <span class="text-gray-700">{feature}</span>
                </div>
              ))}
            </div>

            <div class="text-center">
              <a href={service.ctaLink} class="w-full inline-flex items-center justify-center bg-azul-profundo hover:bg-gray-800 text-white px-6 py-3 rounded-xl font-semibold hover:scale-105 transition-all duration-300">
                {service.ctaText}
                <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </a>
            </div>
          </div>
        ))}
      </div>

      <!-- Custom Projects Option -->
      <div class="text-center mt-12 animate-on-scroll opacity-0 translate-y-8 transition-all duration-700 delay-400">
        <div class="max-w-lg mx-auto">
          <p class="text-gray-600 mb-6 leading-relaxed">
            {customProjects.description}
          </p>
          <a
            href={customProjects.linkUrl}
            class="text-naranja-vibrante hover:text-orange-600 underline font-medium transition-colors duration-300"
          >
            {customProjects.linkText}
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Service Selection FAQ -->
  <section class="py-16 bg-white">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-12 xl:px-16">
      <div class="text-center mb-12 animate-on-scroll opacity-0 translate-y-8 transition-all duration-700">
        <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
          {faqSection.title}
        </h2>
        <p class="text-xl text-gray-600">
          {faqSection.subtitle}
        </p>
      </div>

      <div class="space-y-6">
        {faqSection.questions.map((faq, index) => (
          <div class={`animate-on-scroll opacity-0 translate-y-8 transition-all duration-700 delay-${(index + 1) * 100} bg-white rounded-xl border border-gray-200 overflow-hidden`}>
            <button class="w-full px-8 py-6 text-left faq-button cursor-pointer" onclick="toggleFAQ(this)" aria-expanded="false">
              <div class="flex items-center justify-between">
                <h3 class="text-lg font-semibold text-gray-900 pr-4">
                  {faq.question}
                </h3>
                <svg class="w-6 h-6 text-gray-400 transform transition-transform duration-300 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </div>
            </button>
            <div class="faq-content px-8 pb-6 hidden">
              <p class="text-gray-600 leading-relaxed">
                {faq.answer}
              </p>
            </div>
          </div>
        ))}
      </div>

    </div>
  </section>
</Layout>

<style>
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in-up {
    animation: fade-in-up 1s ease-out forwards;
    opacity: 0;
  }
</style>

<script is:inline>
  // Intersection Observer para animaciones on scroll
  (function() {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    }

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.remove('opacity-0', 'translate-y-8')
          entry.target.classList.add('opacity-100', 'translate-y-0')
          observer.unobserve(entry.target)
        }
      })
    }, observerOptions)

    // Observar todos los elementos con la clase animate-on-scroll
    document.addEventListener('DOMContentLoaded', () => {
      const animatedElements = document.querySelectorAll('.animate-on-scroll')
      animatedElements.forEach(el => observer.observe(el))
    })
  })()

  // FAQ Toggle functionality
  function toggleFAQ(button) {
    const content = button.nextElementSibling;
    const icon = button.querySelector('svg');
    const isOpen = !content.classList.contains('hidden');

    if (isOpen) {
      content.classList.add('hidden');
      icon.style.transform = 'rotate(0deg)';
      button.setAttribute('aria-expanded', 'false');
    } else {
      content.classList.remove('hidden');
      icon.style.transform = 'rotate(180deg)';
      button.setAttribute('aria-expanded', 'true');
    }
  }
</script>