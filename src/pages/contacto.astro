---
import Layout from '../layouts/Layout.astro'

// Import the contact content from Tina CMS
import contactContent from '../content/contacto/index.json'

const baseUrl = 'https://redactorseo.es'
---

<Layout title={contactContent.seo.title} description={contactContent.seo.description}>
  <Fragment slot="head">
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@graph": [
        {
          "@type": "BreadcrumbList",
          "itemListElement": [
            {
              "@type": "ListItem",
              "position": 1,
              "name": "Inicio",
              "item": baseUrl
            },
            {
              "@type": "ListItem",
              "position": 2,
              "name": "Contacto",
              "item": `${baseUrl}/contacto`
            }
          ]
        },
        {
          "@type": "ContactPage",
          "name": "Contacto - Redactor Seo",
          "description": contactContent.seo.description,
          "url": `${baseUrl}/contacto`,
          "mainEntity": {
            "@type": "ProfessionalService",
            "name": "Redactor Seo",
            "url": baseUrl,
            "contactPoint": {
              "@type": "ContactPoint",
              "contactType": "customer support",
              "email": "info@redactorseo.es",
              "availableLanguage": "Spanish",
              "areaServed": "ES"
            }
          }
        },
        {
          "@type": "Organization",
          "name": "Redactor Seo",
          "url": baseUrl,
          "logo": `${baseUrl}/logo.png`,
          "founder": {
            "@type": "Person",
            "name": "Álvaro Pérez"
          }
        }
      ]
    })} />
  </Fragment>
  <!-- Hero Section Contacto -->
  <section class="relative bg-white py-20 lg:py-32 overflow-hidden">
    <!-- Background Elements -->
    <div class="absolute inset-0">
      <div class="absolute top-20 left-20 w-72 h-72 bg-azul-profundo/5 rounded-full blur-3xl"></div>
      <div class="absolute bottom-20 right-20 w-96 h-96 bg-naranja-vibrante/5 rounded-full blur-3xl"></div>
    </div>

    <div class="relative max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold leading-tight mb-6">
        <span class="block text-black">{contactContent.hero.titlePart1}</span>
        <span class="block text-naranja-vibrante">{contactContent.hero.titlePart2}</span>
      </h1>

      <p class="text-xl text-gray-600 max-w-3xl mx-auto">
        {contactContent.hero.description}
      </p>
    </div>
  </section>

  <!-- Contact Form Section -->
  <section class="py-20 bg-gray-50">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">

      <!-- Form Column -->
      <div class="bg-white rounded-lg border border-gray-200 p-8 lg:p-12 mb-8">
        <div class="mb-8">
          <h2 class="text-3xl font-display font-bold text-gray-900 mb-4">{contactContent.form.title}</h2>
          <p class="text-gray-600">{contactContent.form.description}</p>
        </div>
          
          <form id="contact-form" class="space-y-6">
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
              <div>
                <label for="nombre" class="block text-sm font-medium text-gray-700 mb-2">Nombre *</label>
                <input 
                  type="text" 
                  id="nombre" 
                  name="nombre" 
                  required 
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-naranja-vibrante focus:border-transparent transition-all duration-200"
                  placeholder="Tu nombre"
                />
              </div>
              <div>
                <label for="email" class="block text-sm font-medium text-gray-700 mb-2">Email *</label>
                <input 
                  type="email" 
                  id="email" 
                  name="email" 
                  required 
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-naranja-vibrante focus:border-transparent transition-all duration-200"
                  placeholder="tu@email.com"
                />
              </div>
            </div>

            <div>
              <label for="web" class="block text-sm font-medium text-gray-700 mb-2">Web actual</label>
              <input 
                type="text" 
                id="web" 
                name="web" 
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-naranja-vibrante focus:border-transparent transition-all duration-200"
                placeholder="tuweb.com"
              />
            </div>

            <div>
              <label for="servicio" class="block text-sm font-medium text-gray-700 mb-2">¿Qué necesitas? *</label>
              <select
                id="servicio"
                name="servicio"
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-naranja-vibrante focus:border-transparent transition-all duration-200"
              >
                <option value="">Selecciona un servicio</option>
                {contactContent.form.services.map((service) => (
                  <option value={service.value}>{service.label}</option>
                ))}
              </select>
            </div>


            <div>
              <label for="mensaje" class="block text-sm font-medium text-gray-700 mb-2">Cuéntame tu proyecto *</label>
              <textarea
                id="mensaje"
                name="mensaje"
                rows="5"
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-teal-500 focus:border-transparent transition-all duration-200 resize-none"
                placeholder="Describe tu proyecto, objetivos, competencia, palabras clave que te interesan, etc."
              ></textarea>
            </div>

            <!-- Honeypot - campo oculto para atrapar bots -->
            <div style="position: absolute; left: -9999px; top: -9999px; visibility: hidden;" aria-hidden="true">
              <label for="website_url">No llenar este campo si eres humano</label>
              <input type="text" id="website_url" name="website_url" tabindex="-1" autocomplete="off" />
            </div>

            <div class="flex items-start">
              <input 
                type="checkbox" 
                id="privacidad" 
                name="privacidad" 
                required 
                class="mt-1 h-4 w-4 text-naranja-vibrante focus:ring-naranja-vibrante border-gray-300 rounded"
              />
              <label for="privacidad" class="ml-3 text-sm text-gray-600" set:html={contactContent.form.privacyPolicyText.replace(/\[([^\]]+)\]\(([^\)]+)\)/g, '<a href="$2" class="text-naranja-vibrante hover:text-orange-700 underline">$1</a>')}
              ></label>
            </div>

            <button
              type="submit"
              id="submit-btn"
              class="w-full bg-naranja-vibrante text-white py-4 px-6 rounded-lg font-semibold text-lg hover:bg-naranja-vibrante-hover hover:scale-105 transition-all duration-300 flex items-center justify-center"
            >
              <span id="btn-text">{contactContent.form.submitButtonText}</span>
              <svg id="btn-loading" class="hidden animate-spin ml-2 h-5 w-5 text-white" fill="none" viewBox="0 0 24 24" aria-hidden="true">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
            </button>
          </form>

          <!-- Success/Error Messages -->
          <div id="form-success" class="hidden mt-6 p-4 bg-green-50 border-l-4 border-verde-exito rounded">
            <div class="flex items-center">
              <svg class="w-5 h-5 text-verde-exito mr-3" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
              </svg>
              <p class="text-verde-exito font-medium">{contactContent.messages.successMessage}</p>
            </div>
          </div>

          <div id="form-error" class="hidden mt-6 p-4 bg-red-50 border-l-4 border-red-400 rounded">
            <div class="flex items-center">
              <svg class="w-5 h-5 text-red-400 mr-3" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
              </svg>
              <p class="text-red-700 font-medium">{contactContent.messages.errorMessage}</p>
            </div>
          </div>
      </div>
      
      <!-- Contact Info -->
      <div class="bg-white rounded-lg border border-gray-200 p-8 text-center">
        <h3 class="text-2xl font-bold text-gray-900 mb-6">{contactContent.contactInfo.title}</h3>
        
        <div class="flex flex-col sm:flex-row items-center justify-center gap-8">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="w-6 h-6 text-naranja-vibrante" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
              </svg>
            </div>
            <div class="ml-3">
              <p class="text-sm font-medium text-gray-900">Email</p>
              <p class="text-sm text-gray-600">{contactContent.contactInfo.email}</p>
            </div>
          </div>
          
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="w-6 h-6 text-naranja-vibrante" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <div class="ml-3">
              <p class="text-sm font-medium text-gray-900">Tiempo de respuesta</p>
              <p class="text-sm text-gray-600">{contactContent.contactInfo.responseTime}</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>


<script define:vars={{ contactContent }}>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contact-form');
    const submitBtn = document.getElementById('submit-btn');
    const btnText = document.getElementById('btn-text');
    const btnLoading = document.getElementById('btn-loading');
    const successMsg = document.getElementById('form-success');
    const errorMsg = document.getElementById('form-error');

    form.addEventListener('submit', async function(e) {
      e.preventDefault();

      // Show loading state
      submitBtn.disabled = true;
      btnText.textContent = contactContent.messages.loadingText;
      btnLoading.classList.remove('hidden');
      successMsg.classList.add('hidden');
      errorMsg.classList.add('hidden');

      // Collect form data
      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());
      
      try {
        const workerUrl = 'https://redactor-seo-contact-form.dawn-smoke-fbd0.workers.dev';
        const response = await fetch(workerUrl, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });

        if (response.ok) {
          // Success
          successMsg.classList.remove('hidden');
          form.reset();
          
          // Scroll to success message
          successMsg.scrollIntoView({ behavior: 'smooth', block: 'center' });
        } else {
          throw new Error('Server error');
        }
      } catch (error) {
        console.error('Error:', error);
        errorMsg.classList.remove('hidden');
        errorMsg.scrollIntoView({ behavior: 'smooth', block: 'center' });
      } finally {
        // Reset button state
        submitBtn.disabled = false;
        btnText.textContent = contactContent.form.submitButtonText;
        btnLoading.classList.add('hidden');
      }
    });
  });
</script>