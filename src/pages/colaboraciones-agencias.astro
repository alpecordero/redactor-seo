---
import Layout from '../layouts/Layout.astro'

// Import colaboraciones-agencias content from JSON file
import colaboracionesContent from '../content/colaboraciones-agencias/index.json'

const {
  hero,
  targetSection,
  workflowSection,
  conditionsSection,
  includesSection,
  faqSection,
  finalCtaSection
} = colaboracionesContent

const baseUrl = 'https://redactorseo.es'
---

<Layout title={colaboracionesContent.seo.title} description={colaboracionesContent.seo.description}>
  <Fragment slot="head">
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@graph": [
        {
          "@type": "BreadcrumbList",
          "itemListElement": [
            {
              "@type": "ListItem",
              "position": 1,
              "name": "Inicio",
              "item": baseUrl
            },
            {
              "@type": "ListItem",
              "position": 2,
              "name": "Colaboraciones Agencias",
              "item": `${baseUrl}/colaboraciones-agencias`
            }
          ]
        },
        {
          "@type": "Service",
          "serviceType": "Redacción SEO B2B",
          "name": "Redactor SEO para Agencias de Marketing",
          "description": "Servicio de redacción SEO para agencias. Ejecución sin estrategia previa. Colaboraciones B2B recurrentes.",
          "url": `${baseUrl}/colaboraciones-agencias`,
          "provider": {
            "@type": "ProfessionalService",
            "name": "Redactor SEO",
            "url": baseUrl
          },
          "areaServed": {
            "@type": "Country",
            "name": "España"
          },
          "audience": {
            "@type": "Audience",
            "audienceType": "Business"
          },
          "offers": {
            "@type": "Offer",
            "price": conditionsSection.basePrice,
            "priceCurrency": "EUR",
            "priceSpecification": {
              "@type": "UnitPriceSpecification",
              "price": conditionsSection.basePrice,
              "priceCurrency": "EUR",
              "referenceQuantity": {
                "@type": "QuantitativeValue",
                "value": "1",
                "unitText": "página"
              }
            },
            "availability": "https://schema.org/InStock"
          }
        },
        {
          "@type": "FAQPage",
          "mainEntity": faqSection.questions.map(faq => ({
            "@type": "Question",
            "name": faq.question,
            "acceptedAnswer": {
              "@type": "Answer",
              "text": faq.answer
            }
          }))
        }
      ]
    })} />
  </Fragment>

  <!-- SECCIÓN 1: Hero -->
  <section class="relative py-16 md:py-20 lg:py-24 bg-white overflow-hidden">
    <!-- Subtle background elements -->
    <div class="absolute inset-0">
      <div class="absolute top-20 right-20 w-32 h-32 bg-gray-50 rounded-full -z-10"></div>
      <div class="absolute bottom-32 left-16 w-20 h-20 bg-naranja-vibrante/5 rounded-full -z-10"></div>
    </div>

    <div class="relative px-4 sm:px-6 lg:px-12 xl:px-16 w-full">
      <div class="max-w-3xl mx-auto text-center">
        <!-- Subtítulo pequeño -->
        <div class="mb-8 lg:mb-12">
          <p class="text-sm font-medium tracking-wide text-gray-500 uppercase">{hero.subtitle}</p>
        </div>

        <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 leading-tight mb-8 lg:mb-12">
          {hero.titlePart1}
          <span class="block text-naranja-vibrante mt-4">{hero.titlePart2}</span>
        </h1>

        <p class="text-xl md:text-2xl text-gray-600 leading-relaxed mb-12 lg:mb-16 max-w-2xl mx-auto">
          {hero.description}
        </p>

        <a href={hero.ctaLink} class="bg-azul-profundo text-white px-10 py-5 rounded-lg text-xl font-bold hover:bg-gray-800 hover:scale-105 transition-all duration-300 inline-block shadow-lg">
          {hero.ctaText}
        </a>

        <!-- Flecha de scroll -->
        <div class="mt-16 mb-0 flex justify-center">
          <div class="animate-bounce">
            <svg width="40" height="40" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="text-naranja-vibrante">
              <path d="M7 13L12 18L17 13M12 6V17" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- SECCIÓN 2: ¿Es para tu agencia? -->
  <section class="py-20 md:py-32 lg:py-40 bg-gray-50">
    <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-12 xl:px-16">

      <!-- Título e intro -->
      <div class="mb-20 text-center">
        <h2 class="text-3xl md:text-4xl font-display font-bold text-gray-900 mb-6">
          {targetSection.title}
        </h2>
        <p class="text-xl text-gray-600 leading-relaxed max-w-2xl mx-auto">
          {targetSection.intro}
        </p>
      </div>

      <!-- Requisitos - Lista minimalista con fondo blanco -->
      <div class="bg-white rounded-xl shadow-sm border border-gray-100 mb-20 overflow-hidden">
        {targetSection.requirements.map((req, index) => (
          <div class="py-7 px-8 border-b border-gray-100 last:border-b-0 hover:bg-gray-50 transition-colors">
            <div class="flex items-start gap-5">
              <span class="text-gray-400 font-semibold text-base flex-shrink-0 w-7">
                {index + 1}.
              </span>
              <div class="flex-1">
                <h3 class="text-lg font-bold text-gray-900 mb-1.5">
                  {req.title}
                  {req.subtitle && <span class="text-gray-500 font-normal"> {req.subtitle}</span>}
                </h3>
                <p class="text-base text-gray-600 leading-relaxed">
                  {req.description}
                </p>
              </div>
            </div>
          </div>
        ))}
      </div>

      <!-- Disclaimer minimalista -->
      <div class="mb-16 text-center">
        <p class="text-xl text-gray-600 leading-relaxed max-w-2xl mx-auto">
          {targetSection.disclaimer.text1}
        </p>
      </div>

      <!-- CTA -->
      <div class="text-center">
        <a
          href={targetSection.ctaLink}
          class="bg-azul-profundo text-white px-10 py-5 rounded-lg text-xl font-bold hover:bg-gray-800 hover:scale-105 transition-all duration-300 inline-block shadow-lg"
        >
          {targetSection.ctaButtonText}
        </a>
      </div>

    </div>
  </section>

  <!-- SECCIÓN 3: Cómo trabajamos -->
  <section class="py-20 md:py-32 lg:py-40 bg-white">
    <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-12 xl:px-16">

      <!-- Título e intro -->
      <div class="mb-16 text-center">
        <h2 class="text-3xl md:text-4xl font-display font-bold text-gray-900 mb-6">
          {workflowSection.title}
        </h2>
        <p class="text-xl text-gray-600 leading-relaxed max-w-2xl mx-auto">
          {workflowSection.intro}
        </p>
      </div>

      <!-- Lista de pasos minimalista -->
      <div class="space-y-6 max-w-2xl mx-auto">
        {workflowSection.steps.map((step, index) => (
          <div class="group">
            <div class="flex items-start gap-5">
              <div class="flex-shrink-0 w-8 h-8 rounded-md bg-gray-100 flex items-center justify-center text-gray-900 font-bold text-base border border-gray-200 group-hover:border-gray-300 transition-colors">
                {step.number}
              </div>
              <div class="flex-1">
                <h3 class="text-lg font-semibold text-gray-900 mb-1.5">
                  {step.title}
                </h3>
                <p class="text-base text-gray-600 leading-relaxed">
                  {step.description}
                </p>
              </div>
            </div>
          </div>
        ))}
      </div>

    </div>
  </section>

  <!-- SECCIÓN 4: Precios para agencias -->
  <section class="py-20 md:py-32 lg:py-40 bg-gray-50">
    <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-12 xl:px-16">

      <!-- Título -->
      <div class="mb-16 text-center">
        <h2 class="text-3xl md:text-4xl font-display font-bold text-gray-900">
          {conditionsSection.title}
        </h2>
      </div>

      <!-- Tarjeta de precio principal -->
      <div class="bg-white rounded-xl shadow-sm border border-gray-100 py-10 px-8 mb-16">
        <!-- Precio principal -->
        <div class="text-center mb-8">
          <div class="mb-3">
            <span class="text-6xl md:text-7xl font-bold text-gray-900">{conditionsSection.basePrice}</span>
            <span class="text-4xl md:text-[2.75rem] font-bold text-gray-900 align-baseline">{conditionsSection.currency}</span>
          </div>
          <p class="text-xl font-medium text-gray-700 mb-2">
            {conditionsSection.priceDescription}
          </p>
          <p class="text-sm text-gray-500">
            {conditionsSection.priceSubtext}
          </p>
        </div>

        <!-- Grid de condiciones -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 pt-8 border-t border-gray-100">
          {conditionsSection.conditions.map((condition, index) => (
            <div class={`text-center md:border-l md:border-gray-200 md:pl-6 ${index === 0 ? 'md:first:border-l-0 md:first:pl-0' : ''}`}>
              <h4 class="text-base font-bold text-gray-900 mb-1.5">
                {condition.title}
              </h4>
              <p class="text-sm text-gray-600">
                {condition.description}
              </p>
            </div>
          ))}
        </div>
      </div>

      <!-- Nota sobre IVA -->
      <div class="text-center my-12">
        <p class="text-sm text-gray-500">*Los precios no incluyen el IVA</p>
      </div>

      <!-- CTA -->
      <div class="text-center">
        <a
          href={conditionsSection.ctaLink}
          class="bg-azul-profundo text-white px-10 py-5 rounded-lg text-xl font-bold hover:bg-gray-800 hover:scale-105 transition-all duration-300 inline-block shadow-lg"
        >
          {conditionsSection.ctaText}
        </a>
        <p class="text-sm text-gray-500 mt-4">
          {conditionsSection.ctaSubtext}
        </p>
      </div>

    </div>
  </section>

  <!-- SECCIÓN 5: Qué incluye -->
  <section class="py-20 md:py-32 lg:py-40 bg-white">
    <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-12 xl:px-16">

      <!-- Título de la sección -->
      <div class="mb-16 text-center">
        <h2 class="text-3xl md:text-4xl font-display font-bold text-gray-900">
          {includesSection.heading}
        </h2>
      </div>

      <!-- Grid de 2 columnas -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">

        <!-- Columna izquierda: Qué incluyo -->
        <div>
          <h3 class="text-xl font-bold text-gray-900 mb-6">{includesSection.title}</h3>
          <div class="space-y-4">
            {includesSection.included.map((item) => (
              <div class="flex items-start gap-3">
                <span class="text-verde-exito font-bold text-lg flex-shrink-0 mt-0.5">✓</span>
                <p class="text-base text-gray-700 leading-relaxed">
                  {item}
                </p>
              </div>
            ))}
          </div>
        </div>

        <!-- Columna derecha: Qué NO incluyo -->
        <div>
          <h3 class="text-xl font-bold text-gray-900 mb-6">{includesSection.notIncludedTitle}</h3>
          <div class="space-y-4">
            {includesSection.notIncluded.map((item) => (
              <div class="flex items-start gap-3">
                <span class="text-gray-400 font-bold text-lg flex-shrink-0 mt-0.5">✗</span>
                <p class="text-base text-gray-600 leading-relaxed">
                  {item}
                </p>
              </div>
            ))}
          </div>
        </div>

      </div>

      <!-- Párrafo aclaratorio -->
      {includesSection.clarification && (
        <div class="text-center">
          <p class="text-base text-gray-600 leading-relaxed max-w-2xl mx-auto" set:html={includesSection.clarification}>
          </p>
        </div>
      )}

    </div>
  </section>

  <!-- SECCIÓN 6: Preguntas frecuentes -->
  <section class="py-20 md:py-32 lg:py-40 bg-gray-50">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-12 xl:px-16">
      <div class="text-center mb-16">
        <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
          {faqSection.title}
        </h2>
      </div>

      <div class="space-y-3 max-w-3xl mx-auto">
        {faqSection.questions.map((faq) => (
          <details class="bg-white rounded-lg border border-gray-200 overflow-hidden group hover:border-gray-300 transition-colors">
            <summary class="flex justify-between items-center p-6 cursor-pointer hover:bg-gray-50 transition-colors">
              <h3 class="text-lg font-semibold text-gray-900">
                {faq.question}
              </h3>
              <svg class="w-5 h-5 text-gray-400 group-open:rotate-180 transition-transform duration-200 flex-shrink-0 ml-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
              </svg>
            </summary>
            <div class="px-6 pb-6 bg-gray-50 faq-content">
              <p class="text-gray-600 leading-relaxed" set:html={faq.answer}></p>
            </div>
          </details>
        ))}
      </div>
    </div>
  </section>

  <!-- SECCIÓN 7: CTA Final -->
  <section class="py-20 md:py-32 lg:py-40 bg-black text-white">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-12 xl:px-16 text-center">
      <h2 class="text-3xl md:text-4xl font-bold mb-6">{finalCtaSection.title}</h2>
      <p class="text-xl text-gray-300 leading-relaxed max-w-3xl mx-auto mb-8">
        {finalCtaSection.description}
      </p>

      <a href={finalCtaSection.ctaLink} class="inline-flex items-center bg-naranja-vibrante text-white px-8 py-4 rounded-xl text-xl font-bold hover:bg-naranja-vibrante-hover hover:scale-105 transition-all duration-300">
        {finalCtaSection.ctaText}
      </a>
    </div>
  </section>
</Layout>

<style>
  .prose {
    max-width: none;
  }

  .faq-content :global(a) {
    color: #E55A2E;
    text-decoration: underline;
    transition: color 0.3s ease;
  }

  .faq-content :global(a:hover) {
    color: #ea580c;
  }
</style>
