# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  title: String
  basename: String!
  hasReferences: Boolean
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type Folder {
  name: String!
  path: String!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  homepage(relativePath: String): Homepage!
  homepageConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: HomepageFilter): HomepageConnection!
  pages(relativePath: String): Pages!
  pagesConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: PagesFilter): PagesConnection!
  auditoria(relativePath: String): Auditoria!
  auditoriaConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: AuditoriaFilter): AuditoriaConnection!
  redaccion_web(relativePath: String): Redaccion_web!
  redaccion_webConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: Redaccion_webFilter): Redaccion_webConnection!
  redaccion_blog(relativePath: String): Redaccion_blog!
  redaccion_blogConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: Redaccion_blogFilter): Redaccion_blogConnection!
  contact_page(relativePath: String): Contact_page!
  contact_pageConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: Contact_pageFilter): Contact_pageConnection!
  sobre_mi(relativePath: String): Sobre_mi!
  sobre_miConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: Sobre_miFilter): Sobre_miConnection!
  servicios_page(relativePath: String): Servicios_page!
  servicios_pageConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: Servicios_pageFilter): Servicios_pageConnection!
  colaboraciones_agencias(relativePath: String): Colaboraciones_agencias!
  colaboraciones_agenciasConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: Colaboraciones_agenciasFilter): Colaboraciones_agenciasConnection!
  pack_inevitable(relativePath: String): Pack_inevitable!
  pack_inevitableConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: Pack_inevitableFilter): Pack_inevitableConnection!
}

input DocumentFilter {
  homepage: HomepageFilter
  pages: PagesFilter
  auditoria: AuditoriaFilter
  redaccion_web: Redaccion_webFilter
  redaccion_blog: Redaccion_blogFilter
  contact_page: Contact_pageFilter
  sobre_mi: Sobre_miFilter
  servicios_page: Servicios_pageFilter
  colaboraciones_agencias: Colaboraciones_agenciasFilter
  pack_inevitable: Pack_inevitableFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter, folder: String): DocumentConnection!
}

union DocumentNode = Homepage | Pages | Auditoria | Redaccion_web | Redaccion_blog | Contact_page | Sobre_mi | Servicios_page | Colaboraciones_agencias | Pack_inevitable | Folder

type HomepageSeo {
  title: String!
  description: String!
}

type HomepageHero {
  subtitle: String!
  title: String!
  description: String!
  candleMessages: [String!]!
}

type HomepageGoogleDeathSectionCheckboxItems {
  text: String!
}

type HomepageGoogleDeathSection {
  title: String!
  paragraph: String!
  checkboxItems: [HomepageGoogleDeathSectionCheckboxItems]
  closingPhrase: String!
}

type HomepagePainPointsSectionPhrases {
  leftPart: String!
  rightPart: String!
}

type HomepagePainPointsSection {
  title: String!
  subtitleFirstPart: String!
  phrases: [HomepagePainPointsSectionPhrases!]!
  aiStatistic: String
}

type HomepageTransitionMessageSection {
  mainText: String!
  highlightedText: String!
  continuationText: String!
}

type HomepageBridgeSection {
  title: String!
  paragraph: String!
  secondaryParagraph: String
  tertiaryParagraph: String
  closingParagraph: String
}

type HomepageStatsSectionStats {
  value: Float!
  suffix: String!
  description: String!
}

type HomepageStatsSection {
  title: String!
  subtitle: String!
  stats: [HomepageStatsSectionStats]
}

type HomepageFeaturedServiceSectionAlternativeLinks {
  text: String!
  url: String!
}

type HomepageFeaturedServiceSection {
  title: String!
  subtitle: String!
  benefit1: String!
  benefit2: String!
  packLabel: String!
  packTitle: String!
  features: [String]
  originalPrice: String!
  currentPrice: String!
  savings: String!
  ctaText: String!
  ctaLink: String!
  alternativeServicesText: String
  alternativeLinks: [HomepageFeaturedServiceSectionAlternativeLinks]
}

type HomepageTestimonialsSectionTestimonials {
  name: String!
  company: String!
  testimonial: String!
  image: String!
  link: String
}

type HomepageTestimonialsSection {
  title: String!
  subtitle: String!
  testimonials: [HomepageTestimonialsSectionTestimonials]
}

type HomepageCtaSection {
  title: String!
  description: String!
  buttonText: String!
  buttonLink: String!
}

type Homepage implements Node & Document {
  seo: HomepageSeo
  hero: HomepageHero
  googleDeathSection: HomepageGoogleDeathSection
  painPointsSection: HomepagePainPointsSection
  transitionMessageSection: HomepageTransitionMessageSection
  bridgeSection: HomepageBridgeSection
  statsSection: HomepageStatsSection
  featuredServiceSection: HomepageFeaturedServiceSection
  testimonialsSection: HomepageTestimonialsSection
  ctaSection: HomepageCtaSection
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input HomepageSeoFilter {
  title: StringFilter
  description: StringFilter
}

input HomepageHeroFilter {
  subtitle: StringFilter
  title: StringFilter
  description: StringFilter
  candleMessages: StringFilter
}

input HomepageGoogleDeathSectionCheckboxItemsFilter {
  text: StringFilter
}

input HomepageGoogleDeathSectionFilter {
  title: StringFilter
  paragraph: StringFilter
  checkboxItems: HomepageGoogleDeathSectionCheckboxItemsFilter
  closingPhrase: StringFilter
}

input HomepagePainPointsSectionPhrasesFilter {
  leftPart: StringFilter
  rightPart: StringFilter
}

input HomepagePainPointsSectionFilter {
  title: StringFilter
  subtitleFirstPart: StringFilter
  phrases: HomepagePainPointsSectionPhrasesFilter
  aiStatistic: StringFilter
}

input HomepageTransitionMessageSectionFilter {
  mainText: StringFilter
  highlightedText: StringFilter
  continuationText: StringFilter
}

input HomepageBridgeSectionFilter {
  title: StringFilter
  paragraph: StringFilter
  secondaryParagraph: StringFilter
  tertiaryParagraph: StringFilter
  closingParagraph: StringFilter
}

input NumberFilter {
  lt: Float
  lte: Float
  gte: Float
  gt: Float
  eq: Float
  exists: Boolean
  in: [Float]
}

input HomepageStatsSectionStatsFilter {
  value: NumberFilter
  suffix: StringFilter
  description: StringFilter
}

input HomepageStatsSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  stats: HomepageStatsSectionStatsFilter
}

input HomepageFeaturedServiceSectionAlternativeLinksFilter {
  text: StringFilter
  url: StringFilter
}

input HomepageFeaturedServiceSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  benefit1: StringFilter
  benefit2: StringFilter
  packLabel: StringFilter
  packTitle: StringFilter
  features: StringFilter
  originalPrice: StringFilter
  currentPrice: StringFilter
  savings: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
  alternativeServicesText: StringFilter
  alternativeLinks: HomepageFeaturedServiceSectionAlternativeLinksFilter
}

input ImageFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input HomepageTestimonialsSectionTestimonialsFilter {
  name: StringFilter
  company: StringFilter
  testimonial: StringFilter
  image: ImageFilter
  link: StringFilter
}

input HomepageTestimonialsSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  testimonials: HomepageTestimonialsSectionTestimonialsFilter
}

input HomepageCtaSectionFilter {
  title: StringFilter
  description: StringFilter
  buttonText: StringFilter
  buttonLink: StringFilter
}

input HomepageFilter {
  seo: HomepageSeoFilter
  hero: HomepageHeroFilter
  googleDeathSection: HomepageGoogleDeathSectionFilter
  painPointsSection: HomepagePainPointsSectionFilter
  transitionMessageSection: HomepageTransitionMessageSectionFilter
  bridgeSection: HomepageBridgeSectionFilter
  statsSection: HomepageStatsSectionFilter
  featuredServiceSection: HomepageFeaturedServiceSectionFilter
  testimonialsSection: HomepageTestimonialsSectionFilter
  ctaSection: HomepageCtaSectionFilter
}

type HomepageConnectionEdges {
  cursor: String!
  node: Homepage
}

type HomepageConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [HomepageConnectionEdges]
}

type PagesExperienceSectionItems {
  icon: String
  title: String
  description: String
}

type PagesExperienceSection {
  title: String
  subtitle: String
  items: [PagesExperienceSectionItems]
}

type PagesValuesSectionValues {
  title: String
  description: String
}

type PagesValuesSection {
  title: String
  subtitle: String
  values: [PagesValuesSectionValues]
}

type PagesTestimonial {
  quote: String
  author: String
  role: String
}

type PagesCtaSection {
  title: String
  description: String
  buttonText: String
}

type Pages implements Node & Document {
  title: String!
  description: String
  subtitle: String
  introduction: String
  profileImage: String
  experienceSection: PagesExperienceSection
  valuesSection: PagesValuesSection
  testimonial: PagesTestimonial
  ctaSection: PagesCtaSection
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input PagesExperienceSectionItemsFilter {
  icon: StringFilter
  title: StringFilter
  description: StringFilter
}

input PagesExperienceSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  items: PagesExperienceSectionItemsFilter
}

input PagesValuesSectionValuesFilter {
  title: StringFilter
  description: StringFilter
}

input PagesValuesSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  values: PagesValuesSectionValuesFilter
}

input PagesTestimonialFilter {
  quote: StringFilter
  author: StringFilter
  role: StringFilter
}

input PagesCtaSectionFilter {
  title: StringFilter
  description: StringFilter
  buttonText: StringFilter
}

input RichTextFilter {
  startsWith: String
  eq: String
  exists: Boolean
}

input PagesFilter {
  title: StringFilter
  description: StringFilter
  subtitle: StringFilter
  introduction: StringFilter
  profileImage: ImageFilter
  experienceSection: PagesExperienceSectionFilter
  valuesSection: PagesValuesSectionFilter
  testimonial: PagesTestimonialFilter
  ctaSection: PagesCtaSectionFilter
  body: RichTextFilter
}

type PagesConnectionEdges {
  cursor: String!
  node: Pages
}

type PagesConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [PagesConnectionEdges]
}

type AuditoriaSeo {
  title: String!
  description: String!
}

type AuditoriaHero {
  subtitle: String!
  titlePart1: String!
  titlePart2: String!
  description: String!
  ctaText: String!
  ctaLink: String!
}

type AuditoriaProblemsSectionProblems {
  problem: String!
  consequence: String!
}

type AuditoriaProblemsSection {
  title: String!
  subtitle: String!
  problems: [AuditoriaProblemsSectionProblems]
  closingText: String!
}

type AuditoriaApproachSectionPoints {
  title: String!
  description: String!
}

type AuditoriaApproachSection {
  title: String!
  subtitle: String
  points: [AuditoriaApproachSectionPoints]
  conclusion: String!
}

type AuditoriaTestimonialsSectionTestimonials {
  quote: String!
  author: String!
}

type AuditoriaTestimonialsSection {
  title: String!
  testimonials: [AuditoriaTestimonialsSectionTestimonials]
}

type AuditoriaPricingSection {
  title: String!
  subtitle: String!
  price: String!
  currency: String!
  priceDescription: String!
  includes: [String!]!
  delivery: String!
  format: String!
  ctaText: String!
  ctaLink: String!
}

type AuditoriaFaqSectionQuestions {
  question: String!
  answer: String!
}

type AuditoriaFaqSection {
  title: String!
  questions: [AuditoriaFaqSectionQuestions]
}

type AuditoriaFinalCtaSection {
  title: String!
  description: String!
  ctaText: String!
  ctaLink: String!
}

type Auditoria implements Node & Document {
  seo: AuditoriaSeo
  hero: AuditoriaHero
  problemsSection: AuditoriaProblemsSection
  approachSection: AuditoriaApproachSection
  testimonialsSection: AuditoriaTestimonialsSection
  pricingSection: AuditoriaPricingSection
  faqSection: AuditoriaFaqSection
  finalCtaSection: AuditoriaFinalCtaSection
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input AuditoriaSeoFilter {
  title: StringFilter
  description: StringFilter
}

input AuditoriaHeroFilter {
  subtitle: StringFilter
  titlePart1: StringFilter
  titlePart2: StringFilter
  description: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
}

input AuditoriaProblemsSectionProblemsFilter {
  problem: StringFilter
  consequence: StringFilter
}

input AuditoriaProblemsSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  problems: AuditoriaProblemsSectionProblemsFilter
  closingText: StringFilter
}

input AuditoriaApproachSectionPointsFilter {
  title: StringFilter
  description: StringFilter
}

input AuditoriaApproachSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  points: AuditoriaApproachSectionPointsFilter
  conclusion: StringFilter
}

input AuditoriaTestimonialsSectionTestimonialsFilter {
  quote: StringFilter
  author: StringFilter
}

input AuditoriaTestimonialsSectionFilter {
  title: StringFilter
  testimonials: AuditoriaTestimonialsSectionTestimonialsFilter
}

input AuditoriaPricingSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  price: StringFilter
  currency: StringFilter
  priceDescription: StringFilter
  includes: StringFilter
  delivery: StringFilter
  format: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
}

input AuditoriaFaqSectionQuestionsFilter {
  question: StringFilter
  answer: StringFilter
}

input AuditoriaFaqSectionFilter {
  title: StringFilter
  questions: AuditoriaFaqSectionQuestionsFilter
}

input AuditoriaFinalCtaSectionFilter {
  title: StringFilter
  description: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
}

input AuditoriaFilter {
  seo: AuditoriaSeoFilter
  hero: AuditoriaHeroFilter
  problemsSection: AuditoriaProblemsSectionFilter
  approachSection: AuditoriaApproachSectionFilter
  testimonialsSection: AuditoriaTestimonialsSectionFilter
  pricingSection: AuditoriaPricingSectionFilter
  faqSection: AuditoriaFaqSectionFilter
  finalCtaSection: AuditoriaFinalCtaSectionFilter
}

type AuditoriaConnectionEdges {
  cursor: String!
  node: Auditoria
}

type AuditoriaConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [AuditoriaConnectionEdges]
}

type Redaccion_webSeo {
  title: String!
  description: String!
}

type Redaccion_webHero {
  subtitle: String!
  titlePart1: String!
  titlePart2: String!
  description: String!
  ctaText: String!
  ctaLink: String!
}

type Redaccion_webProblemsSectionProblems {
  problem: String!
  consequence: String!
}

type Redaccion_webProblemsSection {
  title: String!
  subtitle: String!
  problems: [Redaccion_webProblemsSectionProblems]
  closingText: String!
}

type Redaccion_webApproachSectionPoints {
  title: String!
  description: String!
}

type Redaccion_webApproachSection {
  title: String!
  subtitle: String
  points: [Redaccion_webApproachSectionPoints]
  conclusion: String!
}

type Redaccion_webTestimonialsSectionTestimonials {
  quote: String!
  author: String!
}

type Redaccion_webTestimonialsSection {
  title: String!
  testimonials: [Redaccion_webTestimonialsSectionTestimonials]
}

type Redaccion_webPricingSectionCommonFeatures {
  title: String!
  features: [String!]!
  additionalPage: String!
}

type Redaccion_webPricingSectionPackages {
  name: String!
  pages: String!
  price: String!
  currency: String!
  priceDescription: String!
  includes: [String!]!
  delivery: String!
  format: String!
  ctaText: String!
  ctaLink: String!
  isPopular: Boolean
}

type Redaccion_webPricingSection {
  title: String!
  subtitle: String!
  commonFeatures: Redaccion_webPricingSectionCommonFeatures
  packages: [Redaccion_webPricingSectionPackages]
}

type Redaccion_webFaqSectionQuestions {
  question: String!
  answer: String!
}

type Redaccion_webFaqSection {
  title: String!
  questions: [Redaccion_webFaqSectionQuestions]
}

type Redaccion_webFinalCtaSection {
  title: String!
  description: String!
  ctaText: String!
  ctaLink: String!
}

type Redaccion_web implements Node & Document {
  seo: Redaccion_webSeo
  hero: Redaccion_webHero
  problemsSection: Redaccion_webProblemsSection
  approachSection: Redaccion_webApproachSection
  testimonialsSection: Redaccion_webTestimonialsSection
  pricingSection: Redaccion_webPricingSection
  faqSection: Redaccion_webFaqSection
  finalCtaSection: Redaccion_webFinalCtaSection
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input Redaccion_webSeoFilter {
  title: StringFilter
  description: StringFilter
}

input Redaccion_webHeroFilter {
  subtitle: StringFilter
  titlePart1: StringFilter
  titlePart2: StringFilter
  description: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
}

input Redaccion_webProblemsSectionProblemsFilter {
  problem: StringFilter
  consequence: StringFilter
}

input Redaccion_webProblemsSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  problems: Redaccion_webProblemsSectionProblemsFilter
  closingText: StringFilter
}

input Redaccion_webApproachSectionPointsFilter {
  title: StringFilter
  description: StringFilter
}

input Redaccion_webApproachSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  points: Redaccion_webApproachSectionPointsFilter
  conclusion: StringFilter
}

input Redaccion_webTestimonialsSectionTestimonialsFilter {
  quote: StringFilter
  author: StringFilter
}

input Redaccion_webTestimonialsSectionFilter {
  title: StringFilter
  testimonials: Redaccion_webTestimonialsSectionTestimonialsFilter
}

input Redaccion_webPricingSectionCommonFeaturesFilter {
  title: StringFilter
  features: StringFilter
  additionalPage: StringFilter
}

input BooleanFilter {
  eq: Boolean
  exists: Boolean
}

input Redaccion_webPricingSectionPackagesFilter {
  name: StringFilter
  pages: StringFilter
  price: StringFilter
  currency: StringFilter
  priceDescription: StringFilter
  includes: StringFilter
  delivery: StringFilter
  format: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
  isPopular: BooleanFilter
}

input Redaccion_webPricingSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  commonFeatures: Redaccion_webPricingSectionCommonFeaturesFilter
  packages: Redaccion_webPricingSectionPackagesFilter
}

input Redaccion_webFaqSectionQuestionsFilter {
  question: StringFilter
  answer: StringFilter
}

input Redaccion_webFaqSectionFilter {
  title: StringFilter
  questions: Redaccion_webFaqSectionQuestionsFilter
}

input Redaccion_webFinalCtaSectionFilter {
  title: StringFilter
  description: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
}

input Redaccion_webFilter {
  seo: Redaccion_webSeoFilter
  hero: Redaccion_webHeroFilter
  problemsSection: Redaccion_webProblemsSectionFilter
  approachSection: Redaccion_webApproachSectionFilter
  testimonialsSection: Redaccion_webTestimonialsSectionFilter
  pricingSection: Redaccion_webPricingSectionFilter
  faqSection: Redaccion_webFaqSectionFilter
  finalCtaSection: Redaccion_webFinalCtaSectionFilter
}

type Redaccion_webConnectionEdges {
  cursor: String!
  node: Redaccion_web
}

type Redaccion_webConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Redaccion_webConnectionEdges]
}

type Redaccion_blogSeo {
  title: String!
  description: String!
}

type Redaccion_blogHero {
  subtitle: String!
  titlePart1: String!
  titlePart2: String!
  description: String!
  ctaText: String!
  ctaLink: String!
}

type Redaccion_blogProblemsSectionProblems {
  problem: String!
  consequence: String!
}

type Redaccion_blogProblemsSection {
  title: String!
  subtitle: String!
  problems: [Redaccion_blogProblemsSectionProblems]
  closingText: String!
}

type Redaccion_blogApproachSectionPoints {
  title: String!
  description: String!
}

type Redaccion_blogApproachSection {
  title: String!
  subtitle: String
  points: [Redaccion_blogApproachSectionPoints]
  conclusion: String!
}

type Redaccion_blogTestimonialsSectionTestimonials {
  quote: String!
  author: String!
}

type Redaccion_blogTestimonialsSection {
  title: String!
  testimonials: [Redaccion_blogTestimonialsSectionTestimonials]
}

type Redaccion_blogPricingSectionPackages {
  name: String!
  articles: String!
  price: String!
  currency: String!
  priceDescription: String!
  includes: [String!]!
  delivery: String!
  format: String!
  ctaText: String!
  ctaLink: String!
  isPopular: Boolean
}

type Redaccion_blogPricingSection {
  title: String!
  subtitle: String!
  packages: [Redaccion_blogPricingSectionPackages]
}

type Redaccion_blogFaqSectionQuestions {
  question: String!
  answer: String!
}

type Redaccion_blogFaqSection {
  title: String!
  questions: [Redaccion_blogFaqSectionQuestions]
}

type Redaccion_blogFinalCtaSection {
  title: String!
  description: String!
  ctaText: String!
  ctaLink: String!
}

type Redaccion_blog implements Node & Document {
  seo: Redaccion_blogSeo
  hero: Redaccion_blogHero
  problemsSection: Redaccion_blogProblemsSection
  approachSection: Redaccion_blogApproachSection
  testimonialsSection: Redaccion_blogTestimonialsSection
  pricingSection: Redaccion_blogPricingSection
  faqSection: Redaccion_blogFaqSection
  finalCtaSection: Redaccion_blogFinalCtaSection
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input Redaccion_blogSeoFilter {
  title: StringFilter
  description: StringFilter
}

input Redaccion_blogHeroFilter {
  subtitle: StringFilter
  titlePart1: StringFilter
  titlePart2: StringFilter
  description: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
}

input Redaccion_blogProblemsSectionProblemsFilter {
  problem: StringFilter
  consequence: StringFilter
}

input Redaccion_blogProblemsSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  problems: Redaccion_blogProblemsSectionProblemsFilter
  closingText: StringFilter
}

input Redaccion_blogApproachSectionPointsFilter {
  title: StringFilter
  description: StringFilter
}

input Redaccion_blogApproachSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  points: Redaccion_blogApproachSectionPointsFilter
  conclusion: StringFilter
}

input Redaccion_blogTestimonialsSectionTestimonialsFilter {
  quote: StringFilter
  author: StringFilter
}

input Redaccion_blogTestimonialsSectionFilter {
  title: StringFilter
  testimonials: Redaccion_blogTestimonialsSectionTestimonialsFilter
}

input Redaccion_blogPricingSectionPackagesFilter {
  name: StringFilter
  articles: StringFilter
  price: StringFilter
  currency: StringFilter
  priceDescription: StringFilter
  includes: StringFilter
  delivery: StringFilter
  format: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
  isPopular: BooleanFilter
}

input Redaccion_blogPricingSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  packages: Redaccion_blogPricingSectionPackagesFilter
}

input Redaccion_blogFaqSectionQuestionsFilter {
  question: StringFilter
  answer: StringFilter
}

input Redaccion_blogFaqSectionFilter {
  title: StringFilter
  questions: Redaccion_blogFaqSectionQuestionsFilter
}

input Redaccion_blogFinalCtaSectionFilter {
  title: StringFilter
  description: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
}

input Redaccion_blogFilter {
  seo: Redaccion_blogSeoFilter
  hero: Redaccion_blogHeroFilter
  problemsSection: Redaccion_blogProblemsSectionFilter
  approachSection: Redaccion_blogApproachSectionFilter
  testimonialsSection: Redaccion_blogTestimonialsSectionFilter
  pricingSection: Redaccion_blogPricingSectionFilter
  faqSection: Redaccion_blogFaqSectionFilter
  finalCtaSection: Redaccion_blogFinalCtaSectionFilter
}

type Redaccion_blogConnectionEdges {
  cursor: String!
  node: Redaccion_blog
}

type Redaccion_blogConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Redaccion_blogConnectionEdges]
}

type Contact_pageSeo {
  title: String!
  description: String!
}

type Contact_pageHero {
  titlePart1: String!
  titlePart2: String!
  description: String!
}

type Contact_pageFormServices {
  value: String!
  label: String!
}

type Contact_pageForm {
  title: String!
  services: [Contact_pageFormServices]
  submitButtonText: String!
  privacyPolicyText: String!
}

type Contact_pageContactInfo {
  title: String!
  email: String!
  responseTime: String!
}

type Contact_pageMessages {
  successMessage: String!
  errorMessage: String!
  loadingText: String!
}

type Contact_page implements Node & Document {
  seo: Contact_pageSeo
  hero: Contact_pageHero
  form: Contact_pageForm
  contactInfo: Contact_pageContactInfo
  messages: Contact_pageMessages
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input Contact_pageSeoFilter {
  title: StringFilter
  description: StringFilter
}

input Contact_pageHeroFilter {
  titlePart1: StringFilter
  titlePart2: StringFilter
  description: StringFilter
}

input Contact_pageFormServicesFilter {
  value: StringFilter
  label: StringFilter
}

input Contact_pageFormFilter {
  title: StringFilter
  services: Contact_pageFormServicesFilter
  submitButtonText: StringFilter
  privacyPolicyText: StringFilter
}

input Contact_pageContactInfoFilter {
  title: StringFilter
  email: StringFilter
  responseTime: StringFilter
}

input Contact_pageMessagesFilter {
  successMessage: StringFilter
  errorMessage: StringFilter
  loadingText: StringFilter
}

input Contact_pageFilter {
  seo: Contact_pageSeoFilter
  hero: Contact_pageHeroFilter
  form: Contact_pageFormFilter
  contactInfo: Contact_pageContactInfoFilter
  messages: Contact_pageMessagesFilter
}

type Contact_pageConnectionEdges {
  cursor: String!
  node: Contact_page
}

type Contact_pageConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Contact_pageConnectionEdges]
}

type Sobre_miSeo {
  title: String!
  description: String!
}

type Sobre_mi implements Node & Document {
  seo: Sobre_miSeo
  title: String!
  subtitle: String
  profileImage: String!
  storyContent: String!
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input Sobre_miSeoFilter {
  title: StringFilter
  description: StringFilter
}

input Sobre_miFilter {
  seo: Sobre_miSeoFilter
  title: StringFilter
  subtitle: StringFilter
  profileImage: ImageFilter
  storyContent: StringFilter
}

type Sobre_miConnectionEdges {
  cursor: String!
  node: Sobre_mi
}

type Sobre_miConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Sobre_miConnectionEdges]
}

type Servicios_pageSeo {
  title: String!
  description: String!
  keywords: String
  ogTitle: String
  ogDescription: String
  ogImage: String
  canonicalUrl: String
  noindex: Boolean
}

type Servicios_pageHero {
  titlePart1: String!
  titlePart2: String!
  description: String!
}

type Servicios_pageServicePackagesPackages {
  title: String!
  subtitle: String!
  price: String!
  currency: String!
  priceNote: String
  features: [String!]!
  ctaText: String!
  ctaLink: String!
  isPopular: Boolean
}

type Servicios_pageServicePackagesPackInevitable {
  packLabel: String!
  title: String!
  subtitle: String!
  benefits: [String!]!
  features: [String!]!
  currentPrice: String!
  originalPrice: String!
  savings: String!
  ctaText: String!
  ctaLink: String!
}

type Servicios_pageServicePackagesCustomProjects {
  description: String!
  linkText: String!
  linkUrl: String!
}

type Servicios_pageServicePackages {
  packages: [Servicios_pageServicePackagesPackages]
  packInevitable: Servicios_pageServicePackagesPackInevitable
  customProjects: Servicios_pageServicePackagesCustomProjects
}

type Servicios_pageFaqSectionQuestions {
  question: String!
  answer: String!
}

type Servicios_pageFaqSection {
  title: String!
  subtitle: String!
  questions: [Servicios_pageFaqSectionQuestions]
}

type Servicios_page implements Node & Document {
  seo: Servicios_pageSeo
  hero: Servicios_pageHero
  servicePackages: Servicios_pageServicePackages
  faqSection: Servicios_pageFaqSection
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input Servicios_pageSeoFilter {
  title: StringFilter
  description: StringFilter
  keywords: StringFilter
  ogTitle: StringFilter
  ogDescription: StringFilter
  ogImage: ImageFilter
  canonicalUrl: StringFilter
  noindex: BooleanFilter
}

input Servicios_pageHeroFilter {
  titlePart1: StringFilter
  titlePart2: StringFilter
  description: StringFilter
}

input Servicios_pageServicePackagesPackagesFilter {
  title: StringFilter
  subtitle: StringFilter
  price: StringFilter
  currency: StringFilter
  priceNote: StringFilter
  features: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
  isPopular: BooleanFilter
}

input Servicios_pageServicePackagesPackInevitableFilter {
  packLabel: StringFilter
  title: StringFilter
  subtitle: StringFilter
  benefits: StringFilter
  features: StringFilter
  currentPrice: StringFilter
  originalPrice: StringFilter
  savings: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
}

input Servicios_pageServicePackagesCustomProjectsFilter {
  description: StringFilter
  linkText: StringFilter
  linkUrl: StringFilter
}

input Servicios_pageServicePackagesFilter {
  packages: Servicios_pageServicePackagesPackagesFilter
  packInevitable: Servicios_pageServicePackagesPackInevitableFilter
  customProjects: Servicios_pageServicePackagesCustomProjectsFilter
}

input Servicios_pageFaqSectionQuestionsFilter {
  question: StringFilter
  answer: StringFilter
}

input Servicios_pageFaqSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  questions: Servicios_pageFaqSectionQuestionsFilter
}

input Servicios_pageFilter {
  seo: Servicios_pageSeoFilter
  hero: Servicios_pageHeroFilter
  servicePackages: Servicios_pageServicePackagesFilter
  faqSection: Servicios_pageFaqSectionFilter
}

type Servicios_pageConnectionEdges {
  cursor: String!
  node: Servicios_page
}

type Servicios_pageConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Servicios_pageConnectionEdges]
}

type Colaboraciones_agenciasSeo {
  title: String!
  description: String!
}

type Colaboraciones_agenciasHero {
  subtitle: String!
  titlePart1: String!
  titlePart2: String!
  description: String!
  ctaText: String!
  ctaLink: String!
}

type Colaboraciones_agenciasTargetSectionRequirements {
  title: String!
  subtitle: String
  description: String!
}

type Colaboraciones_agenciasTargetSectionDisclaimer {
  text1: String!
}

type Colaboraciones_agenciasTargetSection {
  title: String!
  intro: String!
  requirements: [Colaboraciones_agenciasTargetSectionRequirements]
  disclaimer: Colaboraciones_agenciasTargetSectionDisclaimer
  ctaButtonText: String!
  ctaLink: String!
}

type Colaboraciones_agenciasWorkflowSectionSteps {
  number: String!
  title: String!
  description: String!
}

type Colaboraciones_agenciasWorkflowSection {
  title: String!
  intro: String!
  steps: [Colaboraciones_agenciasWorkflowSectionSteps]
}

type Colaboraciones_agenciasConditionsSectionConditions {
  title: String!
  description: String!
}

type Colaboraciones_agenciasConditionsSection {
  title: String!
  basePrice: String!
  currency: String!
  priceDescription: String!
  priceSubtext: String!
  conditions: [Colaboraciones_agenciasConditionsSectionConditions]
  ctaLink: String!
  ctaText: String!
  ctaSubtext: String!
}

type Colaboraciones_agenciasIncludesSection {
  heading: String!
  title: String!
  included: [String!]!
  notIncludedTitle: String!
  notIncluded: [String!]!
  clarification: String
}

type Colaboraciones_agenciasProcessSectionSteps {
  number: String!
  title: String!
  description: String!
}

type Colaboraciones_agenciasProcessSection {
  title: String!
  steps: [Colaboraciones_agenciasProcessSectionSteps]
}

type Colaboraciones_agenciasFaqSectionQuestions {
  question: String!
  answer: String!
}

type Colaboraciones_agenciasFaqSection {
  title: String!
  questions: [Colaboraciones_agenciasFaqSectionQuestions]
}

type Colaboraciones_agenciasFinalCtaSection {
  title: String!
  description: String!
  ctaText: String!
  ctaLink: String!
}

type Colaboraciones_agencias implements Node & Document {
  seo: Colaboraciones_agenciasSeo
  hero: Colaboraciones_agenciasHero
  targetSection: Colaboraciones_agenciasTargetSection
  workflowSection: Colaboraciones_agenciasWorkflowSection
  conditionsSection: Colaboraciones_agenciasConditionsSection
  includesSection: Colaboraciones_agenciasIncludesSection
  processSection: Colaboraciones_agenciasProcessSection
  faqSection: Colaboraciones_agenciasFaqSection
  finalCtaSection: Colaboraciones_agenciasFinalCtaSection
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input Colaboraciones_agenciasSeoFilter {
  title: StringFilter
  description: StringFilter
}

input Colaboraciones_agenciasHeroFilter {
  subtitle: StringFilter
  titlePart1: StringFilter
  titlePart2: StringFilter
  description: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
}

input Colaboraciones_agenciasTargetSectionRequirementsFilter {
  title: StringFilter
  subtitle: StringFilter
  description: StringFilter
}

input Colaboraciones_agenciasTargetSectionDisclaimerFilter {
  text1: StringFilter
}

input Colaboraciones_agenciasTargetSectionFilter {
  title: StringFilter
  intro: StringFilter
  requirements: Colaboraciones_agenciasTargetSectionRequirementsFilter
  disclaimer: Colaboraciones_agenciasTargetSectionDisclaimerFilter
  ctaButtonText: StringFilter
  ctaLink: StringFilter
}

input Colaboraciones_agenciasWorkflowSectionStepsFilter {
  number: StringFilter
  title: StringFilter
  description: StringFilter
}

input Colaboraciones_agenciasWorkflowSectionFilter {
  title: StringFilter
  intro: StringFilter
  steps: Colaboraciones_agenciasWorkflowSectionStepsFilter
}

input Colaboraciones_agenciasConditionsSectionConditionsFilter {
  title: StringFilter
  description: StringFilter
}

input Colaboraciones_agenciasConditionsSectionFilter {
  title: StringFilter
  basePrice: StringFilter
  currency: StringFilter
  priceDescription: StringFilter
  priceSubtext: StringFilter
  conditions: Colaboraciones_agenciasConditionsSectionConditionsFilter
  ctaLink: StringFilter
  ctaText: StringFilter
  ctaSubtext: StringFilter
}

input Colaboraciones_agenciasIncludesSectionFilter {
  heading: StringFilter
  title: StringFilter
  included: StringFilter
  notIncludedTitle: StringFilter
  notIncluded: StringFilter
  clarification: StringFilter
}

input Colaboraciones_agenciasProcessSectionStepsFilter {
  number: StringFilter
  title: StringFilter
  description: StringFilter
}

input Colaboraciones_agenciasProcessSectionFilter {
  title: StringFilter
  steps: Colaboraciones_agenciasProcessSectionStepsFilter
}

input Colaboraciones_agenciasFaqSectionQuestionsFilter {
  question: StringFilter
  answer: StringFilter
}

input Colaboraciones_agenciasFaqSectionFilter {
  title: StringFilter
  questions: Colaboraciones_agenciasFaqSectionQuestionsFilter
}

input Colaboraciones_agenciasFinalCtaSectionFilter {
  title: StringFilter
  description: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
}

input Colaboraciones_agenciasFilter {
  seo: Colaboraciones_agenciasSeoFilter
  hero: Colaboraciones_agenciasHeroFilter
  targetSection: Colaboraciones_agenciasTargetSectionFilter
  workflowSection: Colaboraciones_agenciasWorkflowSectionFilter
  conditionsSection: Colaboraciones_agenciasConditionsSectionFilter
  includesSection: Colaboraciones_agenciasIncludesSectionFilter
  processSection: Colaboraciones_agenciasProcessSectionFilter
  faqSection: Colaboraciones_agenciasFaqSectionFilter
  finalCtaSection: Colaboraciones_agenciasFinalCtaSectionFilter
}

type Colaboraciones_agenciasConnectionEdges {
  cursor: String!
  node: Colaboraciones_agencias
}

type Colaboraciones_agenciasConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Colaboraciones_agenciasConnectionEdges]
}

type Pack_inevitableSeo {
  title: String!
  description: String!
}

type Pack_inevitableHero {
  subtitle: String!
  title: String!
  description: String!
  ctaText: String!
  ctaLink: String!
}

type Pack_inevitableProblemSection {
  title: String!
  content: String!
  keywords: [String]
}

type Pack_inevitableWhatIncludesSectionWebRedaction {
  subtitle: String!
  description: String!
  items: [String!]!
  keywords: [String]
}

type Pack_inevitableWhatIncludesSectionStrategicBlog {
  subtitle: String!
  description: String!
  items: [String!]!
  keywords: [String]
}

type Pack_inevitableWhatIncludesSection {
  title: String!
  subtitle: String!
  webRedaction: Pack_inevitableWhatIncludesSectionWebRedaction
  strategicBlog: Pack_inevitableWhatIncludesSectionStrategicBlog
}

type Pack_inevitableForWhomSection {
  title: String!
  subtitle: String!
  items: [String!]!
  keywords: [String]
}

type Pack_inevitableInvestmentSectionComparisonSeparateWebComplete {
  label: String
  price: String
}

type Pack_inevitableInvestmentSectionComparisonSeparateBlogFirst {
  label: String
  price: String
}

type Pack_inevitableInvestmentSectionComparisonSeparate {
  webComplete: Pack_inevitableInvestmentSectionComparisonSeparateWebComplete
  blogFirst: Pack_inevitableInvestmentSectionComparisonSeparateBlogFirst
  total: String
}

type Pack_inevitableInvestmentSectionComparisonPackage {
  label: String
  price: String
}

type Pack_inevitableInvestmentSectionComparison {
  separate: Pack_inevitableInvestmentSectionComparisonSeparate
  package: Pack_inevitableInvestmentSectionComparisonPackage
  savings: String
}

type Pack_inevitableInvestmentSection {
  title: String!
  comparison: Pack_inevitableInvestmentSectionComparison
  ctaText: String!
  ctaLink: String!
  keywords: [String]
}

type Pack_inevitableProcessSectionSteps {
  number: String!
  title: String!
  duration: String!
  description: String!
}

type Pack_inevitableProcessSection {
  title: String!
  steps: [Pack_inevitableProcessSectionSteps]
  keywords: [String]
}

type Pack_inevitableFaqSectionQuestions {
  question: String!
  answer: String!
}

type Pack_inevitableFaqSection {
  title: String!
  questions: [Pack_inevitableFaqSectionQuestions]
  keywords: [String]
}

type Pack_inevitableTestimonialsSectionTestimonials {
  quote: String!
  author: String!
}

type Pack_inevitableTestimonialsSection {
  title: String!
  testimonials: [Pack_inevitableTestimonialsSectionTestimonials]
}

type Pack_inevitableFinalCtaSection {
  title: String!
  description: String!
  ctaText: String!
  ctaLink: String!
}

type Pack_inevitable implements Node & Document {
  seo: Pack_inevitableSeo
  hero: Pack_inevitableHero
  problemSection: Pack_inevitableProblemSection
  whatIncludesSection: Pack_inevitableWhatIncludesSection
  forWhomSection: Pack_inevitableForWhomSection
  investmentSection: Pack_inevitableInvestmentSection
  processSection: Pack_inevitableProcessSection
  faqSection: Pack_inevitableFaqSection
  testimonialsSection: Pack_inevitableTestimonialsSection
  finalCtaSection: Pack_inevitableFinalCtaSection
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input Pack_inevitableSeoFilter {
  title: StringFilter
  description: StringFilter
}

input Pack_inevitableHeroFilter {
  subtitle: StringFilter
  title: StringFilter
  description: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
}

input Pack_inevitableProblemSectionFilter {
  title: StringFilter
  content: StringFilter
  keywords: StringFilter
}

input Pack_inevitableWhatIncludesSectionWebRedactionFilter {
  subtitle: StringFilter
  description: StringFilter
  items: StringFilter
  keywords: StringFilter
}

input Pack_inevitableWhatIncludesSectionStrategicBlogFilter {
  subtitle: StringFilter
  description: StringFilter
  items: StringFilter
  keywords: StringFilter
}

input Pack_inevitableWhatIncludesSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  webRedaction: Pack_inevitableWhatIncludesSectionWebRedactionFilter
  strategicBlog: Pack_inevitableWhatIncludesSectionStrategicBlogFilter
}

input Pack_inevitableForWhomSectionFilter {
  title: StringFilter
  subtitle: StringFilter
  items: StringFilter
  keywords: StringFilter
}

input Pack_inevitableInvestmentSectionComparisonSeparateWebCompleteFilter {
  label: StringFilter
  price: StringFilter
}

input Pack_inevitableInvestmentSectionComparisonSeparateBlogFirstFilter {
  label: StringFilter
  price: StringFilter
}

input Pack_inevitableInvestmentSectionComparisonSeparateFilter {
  webComplete: Pack_inevitableInvestmentSectionComparisonSeparateWebCompleteFilter
  blogFirst: Pack_inevitableInvestmentSectionComparisonSeparateBlogFirstFilter
  total: StringFilter
}

input Pack_inevitableInvestmentSectionComparisonPackageFilter {
  label: StringFilter
  price: StringFilter
}

input Pack_inevitableInvestmentSectionComparisonFilter {
  separate: Pack_inevitableInvestmentSectionComparisonSeparateFilter
  package: Pack_inevitableInvestmentSectionComparisonPackageFilter
  savings: StringFilter
}

input Pack_inevitableInvestmentSectionFilter {
  title: StringFilter
  comparison: Pack_inevitableInvestmentSectionComparisonFilter
  ctaText: StringFilter
  ctaLink: StringFilter
  keywords: StringFilter
}

input Pack_inevitableProcessSectionStepsFilter {
  number: StringFilter
  title: StringFilter
  duration: StringFilter
  description: StringFilter
}

input Pack_inevitableProcessSectionFilter {
  title: StringFilter
  steps: Pack_inevitableProcessSectionStepsFilter
  keywords: StringFilter
}

input Pack_inevitableFaqSectionQuestionsFilter {
  question: StringFilter
  answer: StringFilter
}

input Pack_inevitableFaqSectionFilter {
  title: StringFilter
  questions: Pack_inevitableFaqSectionQuestionsFilter
  keywords: StringFilter
}

input Pack_inevitableTestimonialsSectionTestimonialsFilter {
  quote: StringFilter
  author: StringFilter
}

input Pack_inevitableTestimonialsSectionFilter {
  title: StringFilter
  testimonials: Pack_inevitableTestimonialsSectionTestimonialsFilter
}

input Pack_inevitableFinalCtaSectionFilter {
  title: StringFilter
  description: StringFilter
  ctaText: StringFilter
  ctaLink: StringFilter
}

input Pack_inevitableFilter {
  seo: Pack_inevitableSeoFilter
  hero: Pack_inevitableHeroFilter
  problemSection: Pack_inevitableProblemSectionFilter
  whatIncludesSection: Pack_inevitableWhatIncludesSectionFilter
  forWhomSection: Pack_inevitableForWhomSectionFilter
  investmentSection: Pack_inevitableInvestmentSectionFilter
  processSection: Pack_inevitableProcessSectionFilter
  faqSection: Pack_inevitableFaqSectionFilter
  testimonialsSection: Pack_inevitableTestimonialsSectionFilter
  finalCtaSection: Pack_inevitableFinalCtaSectionFilter
}

type Pack_inevitableConnectionEdges {
  cursor: String!
  node: Pack_inevitable
}

type Pack_inevitableConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Pack_inevitableConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentUpdateMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  createFolder(collection: String, relativePath: String!): DocumentNode!
  updateHomepage(relativePath: String!, params: HomepageMutation!): Homepage!
  createHomepage(relativePath: String!, params: HomepageMutation!): Homepage!
  updatePages(relativePath: String!, params: PagesMutation!): Pages!
  createPages(relativePath: String!, params: PagesMutation!): Pages!
  updateAuditoria(relativePath: String!, params: AuditoriaMutation!): Auditoria!
  createAuditoria(relativePath: String!, params: AuditoriaMutation!): Auditoria!
  updateRedaccion_web(relativePath: String!, params: Redaccion_webMutation!): Redaccion_web!
  createRedaccion_web(relativePath: String!, params: Redaccion_webMutation!): Redaccion_web!
  updateRedaccion_blog(relativePath: String!, params: Redaccion_blogMutation!): Redaccion_blog!
  createRedaccion_blog(relativePath: String!, params: Redaccion_blogMutation!): Redaccion_blog!
  updateContact_page(relativePath: String!, params: Contact_pageMutation!): Contact_page!
  createContact_page(relativePath: String!, params: Contact_pageMutation!): Contact_page!
  updateSobre_mi(relativePath: String!, params: Sobre_miMutation!): Sobre_mi!
  createSobre_mi(relativePath: String!, params: Sobre_miMutation!): Sobre_mi!
  updateServicios_page(relativePath: String!, params: Servicios_pageMutation!): Servicios_page!
  createServicios_page(relativePath: String!, params: Servicios_pageMutation!): Servicios_page!
  updateColaboraciones_agencias(relativePath: String!, params: Colaboraciones_agenciasMutation!): Colaboraciones_agencias!
  createColaboraciones_agencias(relativePath: String!, params: Colaboraciones_agenciasMutation!): Colaboraciones_agencias!
  updatePack_inevitable(relativePath: String!, params: Pack_inevitableMutation!): Pack_inevitable!
  createPack_inevitable(relativePath: String!, params: Pack_inevitableMutation!): Pack_inevitable!
}

input DocumentUpdateMutation {
  homepage: HomepageMutation
  pages: PagesMutation
  auditoria: AuditoriaMutation
  redaccion_web: Redaccion_webMutation
  redaccion_blog: Redaccion_blogMutation
  contact_page: Contact_pageMutation
  sobre_mi: Sobre_miMutation
  servicios_page: Servicios_pageMutation
  colaboraciones_agencias: Colaboraciones_agenciasMutation
  pack_inevitable: Pack_inevitableMutation
  relativePath: String
}

input DocumentMutation {
  homepage: HomepageMutation
  pages: PagesMutation
  auditoria: AuditoriaMutation
  redaccion_web: Redaccion_webMutation
  redaccion_blog: Redaccion_blogMutation
  contact_page: Contact_pageMutation
  sobre_mi: Sobre_miMutation
  servicios_page: Servicios_pageMutation
  colaboraciones_agencias: Colaboraciones_agenciasMutation
  pack_inevitable: Pack_inevitableMutation
}

input HomepageSeoMutation {
  title: String
  description: String
}

input HomepageHeroMutation {
  subtitle: String
  title: String
  description: String
  candleMessages: [String]
}

input HomepageGoogleDeathSectionCheckboxItemsMutation {
  text: String
}

input HomepageGoogleDeathSectionMutation {
  title: String
  paragraph: String
  checkboxItems: [HomepageGoogleDeathSectionCheckboxItemsMutation]
  closingPhrase: String
}

input HomepagePainPointsSectionPhrasesMutation {
  leftPart: String
  rightPart: String
}

input HomepagePainPointsSectionMutation {
  title: String
  subtitleFirstPart: String
  phrases: [HomepagePainPointsSectionPhrasesMutation]
  aiStatistic: String
}

input HomepageTransitionMessageSectionMutation {
  mainText: String
  highlightedText: String
  continuationText: String
}

input HomepageBridgeSectionMutation {
  title: String
  paragraph: String
  secondaryParagraph: String
  tertiaryParagraph: String
  closingParagraph: String
}

input HomepageStatsSectionStatsMutation {
  value: Float
  suffix: String
  description: String
}

input HomepageStatsSectionMutation {
  title: String
  subtitle: String
  stats: [HomepageStatsSectionStatsMutation]
}

input HomepageFeaturedServiceSectionAlternativeLinksMutation {
  text: String
  url: String
}

input HomepageFeaturedServiceSectionMutation {
  title: String
  subtitle: String
  benefit1: String
  benefit2: String
  packLabel: String
  packTitle: String
  features: [String]
  originalPrice: String
  currentPrice: String
  savings: String
  ctaText: String
  ctaLink: String
  alternativeServicesText: String
  alternativeLinks: [HomepageFeaturedServiceSectionAlternativeLinksMutation]
}

input HomepageTestimonialsSectionTestimonialsMutation {
  name: String
  company: String
  testimonial: String
  image: String
  link: String
}

input HomepageTestimonialsSectionMutation {
  title: String
  subtitle: String
  testimonials: [HomepageTestimonialsSectionTestimonialsMutation]
}

input HomepageCtaSectionMutation {
  title: String
  description: String
  buttonText: String
  buttonLink: String
}

input HomepageMutation {
  seo: HomepageSeoMutation
  hero: HomepageHeroMutation
  googleDeathSection: HomepageGoogleDeathSectionMutation
  painPointsSection: HomepagePainPointsSectionMutation
  transitionMessageSection: HomepageTransitionMessageSectionMutation
  bridgeSection: HomepageBridgeSectionMutation
  statsSection: HomepageStatsSectionMutation
  featuredServiceSection: HomepageFeaturedServiceSectionMutation
  testimonialsSection: HomepageTestimonialsSectionMutation
  ctaSection: HomepageCtaSectionMutation
}

input PagesExperienceSectionItemsMutation {
  icon: String
  title: String
  description: String
}

input PagesExperienceSectionMutation {
  title: String
  subtitle: String
  items: [PagesExperienceSectionItemsMutation]
}

input PagesValuesSectionValuesMutation {
  title: String
  description: String
}

input PagesValuesSectionMutation {
  title: String
  subtitle: String
  values: [PagesValuesSectionValuesMutation]
}

input PagesTestimonialMutation {
  quote: String
  author: String
  role: String
}

input PagesCtaSectionMutation {
  title: String
  description: String
  buttonText: String
}

input PagesMutation {
  title: String
  description: String
  subtitle: String
  introduction: String
  profileImage: String
  experienceSection: PagesExperienceSectionMutation
  valuesSection: PagesValuesSectionMutation
  testimonial: PagesTestimonialMutation
  ctaSection: PagesCtaSectionMutation
  body: JSON
}

input AuditoriaSeoMutation {
  title: String
  description: String
}

input AuditoriaHeroMutation {
  subtitle: String
  titlePart1: String
  titlePart2: String
  description: String
  ctaText: String
  ctaLink: String
}

input AuditoriaProblemsSectionProblemsMutation {
  problem: String
  consequence: String
}

input AuditoriaProblemsSectionMutation {
  title: String
  subtitle: String
  problems: [AuditoriaProblemsSectionProblemsMutation]
  closingText: String
}

input AuditoriaApproachSectionPointsMutation {
  title: String
  description: String
}

input AuditoriaApproachSectionMutation {
  title: String
  subtitle: String
  points: [AuditoriaApproachSectionPointsMutation]
  conclusion: String
}

input AuditoriaTestimonialsSectionTestimonialsMutation {
  quote: String
  author: String
}

input AuditoriaTestimonialsSectionMutation {
  title: String
  testimonials: [AuditoriaTestimonialsSectionTestimonialsMutation]
}

input AuditoriaPricingSectionMutation {
  title: String
  subtitle: String
  price: String
  currency: String
  priceDescription: String
  includes: [String]
  delivery: String
  format: String
  ctaText: String
  ctaLink: String
}

input AuditoriaFaqSectionQuestionsMutation {
  question: String
  answer: String
}

input AuditoriaFaqSectionMutation {
  title: String
  questions: [AuditoriaFaqSectionQuestionsMutation]
}

input AuditoriaFinalCtaSectionMutation {
  title: String
  description: String
  ctaText: String
  ctaLink: String
}

input AuditoriaMutation {
  seo: AuditoriaSeoMutation
  hero: AuditoriaHeroMutation
  problemsSection: AuditoriaProblemsSectionMutation
  approachSection: AuditoriaApproachSectionMutation
  testimonialsSection: AuditoriaTestimonialsSectionMutation
  pricingSection: AuditoriaPricingSectionMutation
  faqSection: AuditoriaFaqSectionMutation
  finalCtaSection: AuditoriaFinalCtaSectionMutation
}

input Redaccion_webSeoMutation {
  title: String
  description: String
}

input Redaccion_webHeroMutation {
  subtitle: String
  titlePart1: String
  titlePart2: String
  description: String
  ctaText: String
  ctaLink: String
}

input Redaccion_webProblemsSectionProblemsMutation {
  problem: String
  consequence: String
}

input Redaccion_webProblemsSectionMutation {
  title: String
  subtitle: String
  problems: [Redaccion_webProblemsSectionProblemsMutation]
  closingText: String
}

input Redaccion_webApproachSectionPointsMutation {
  title: String
  description: String
}

input Redaccion_webApproachSectionMutation {
  title: String
  subtitle: String
  points: [Redaccion_webApproachSectionPointsMutation]
  conclusion: String
}

input Redaccion_webTestimonialsSectionTestimonialsMutation {
  quote: String
  author: String
}

input Redaccion_webTestimonialsSectionMutation {
  title: String
  testimonials: [Redaccion_webTestimonialsSectionTestimonialsMutation]
}

input Redaccion_webPricingSectionCommonFeaturesMutation {
  title: String
  features: [String]
  additionalPage: String
}

input Redaccion_webPricingSectionPackagesMutation {
  name: String
  pages: String
  price: String
  currency: String
  priceDescription: String
  includes: [String]
  delivery: String
  format: String
  ctaText: String
  ctaLink: String
  isPopular: Boolean
}

input Redaccion_webPricingSectionMutation {
  title: String
  subtitle: String
  commonFeatures: Redaccion_webPricingSectionCommonFeaturesMutation
  packages: [Redaccion_webPricingSectionPackagesMutation]
}

input Redaccion_webFaqSectionQuestionsMutation {
  question: String
  answer: String
}

input Redaccion_webFaqSectionMutation {
  title: String
  questions: [Redaccion_webFaqSectionQuestionsMutation]
}

input Redaccion_webFinalCtaSectionMutation {
  title: String
  description: String
  ctaText: String
  ctaLink: String
}

input Redaccion_webMutation {
  seo: Redaccion_webSeoMutation
  hero: Redaccion_webHeroMutation
  problemsSection: Redaccion_webProblemsSectionMutation
  approachSection: Redaccion_webApproachSectionMutation
  testimonialsSection: Redaccion_webTestimonialsSectionMutation
  pricingSection: Redaccion_webPricingSectionMutation
  faqSection: Redaccion_webFaqSectionMutation
  finalCtaSection: Redaccion_webFinalCtaSectionMutation
}

input Redaccion_blogSeoMutation {
  title: String
  description: String
}

input Redaccion_blogHeroMutation {
  subtitle: String
  titlePart1: String
  titlePart2: String
  description: String
  ctaText: String
  ctaLink: String
}

input Redaccion_blogProblemsSectionProblemsMutation {
  problem: String
  consequence: String
}

input Redaccion_blogProblemsSectionMutation {
  title: String
  subtitle: String
  problems: [Redaccion_blogProblemsSectionProblemsMutation]
  closingText: String
}

input Redaccion_blogApproachSectionPointsMutation {
  title: String
  description: String
}

input Redaccion_blogApproachSectionMutation {
  title: String
  subtitle: String
  points: [Redaccion_blogApproachSectionPointsMutation]
  conclusion: String
}

input Redaccion_blogTestimonialsSectionTestimonialsMutation {
  quote: String
  author: String
}

input Redaccion_blogTestimonialsSectionMutation {
  title: String
  testimonials: [Redaccion_blogTestimonialsSectionTestimonialsMutation]
}

input Redaccion_blogPricingSectionPackagesMutation {
  name: String
  articles: String
  price: String
  currency: String
  priceDescription: String
  includes: [String]
  delivery: String
  format: String
  ctaText: String
  ctaLink: String
  isPopular: Boolean
}

input Redaccion_blogPricingSectionMutation {
  title: String
  subtitle: String
  packages: [Redaccion_blogPricingSectionPackagesMutation]
}

input Redaccion_blogFaqSectionQuestionsMutation {
  question: String
  answer: String
}

input Redaccion_blogFaqSectionMutation {
  title: String
  questions: [Redaccion_blogFaqSectionQuestionsMutation]
}

input Redaccion_blogFinalCtaSectionMutation {
  title: String
  description: String
  ctaText: String
  ctaLink: String
}

input Redaccion_blogMutation {
  seo: Redaccion_blogSeoMutation
  hero: Redaccion_blogHeroMutation
  problemsSection: Redaccion_blogProblemsSectionMutation
  approachSection: Redaccion_blogApproachSectionMutation
  testimonialsSection: Redaccion_blogTestimonialsSectionMutation
  pricingSection: Redaccion_blogPricingSectionMutation
  faqSection: Redaccion_blogFaqSectionMutation
  finalCtaSection: Redaccion_blogFinalCtaSectionMutation
}

input Contact_pageSeoMutation {
  title: String
  description: String
}

input Contact_pageHeroMutation {
  titlePart1: String
  titlePart2: String
  description: String
}

input Contact_pageFormServicesMutation {
  value: String
  label: String
}

input Contact_pageFormMutation {
  title: String
  services: [Contact_pageFormServicesMutation]
  submitButtonText: String
  privacyPolicyText: String
}

input Contact_pageContactInfoMutation {
  title: String
  email: String
  responseTime: String
}

input Contact_pageMessagesMutation {
  successMessage: String
  errorMessage: String
  loadingText: String
}

input Contact_pageMutation {
  seo: Contact_pageSeoMutation
  hero: Contact_pageHeroMutation
  form: Contact_pageFormMutation
  contactInfo: Contact_pageContactInfoMutation
  messages: Contact_pageMessagesMutation
}

input Sobre_miSeoMutation {
  title: String
  description: String
}

input Sobre_miMutation {
  seo: Sobre_miSeoMutation
  title: String
  subtitle: String
  profileImage: String
  storyContent: String
}

input Servicios_pageSeoMutation {
  title: String
  description: String
  keywords: String
  ogTitle: String
  ogDescription: String
  ogImage: String
  canonicalUrl: String
  noindex: Boolean
}

input Servicios_pageHeroMutation {
  titlePart1: String
  titlePart2: String
  description: String
}

input Servicios_pageServicePackagesPackagesMutation {
  title: String
  subtitle: String
  price: String
  currency: String
  priceNote: String
  features: [String]
  ctaText: String
  ctaLink: String
  isPopular: Boolean
}

input Servicios_pageServicePackagesPackInevitableMutation {
  packLabel: String
  title: String
  subtitle: String
  benefits: [String]
  features: [String]
  currentPrice: String
  originalPrice: String
  savings: String
  ctaText: String
  ctaLink: String
}

input Servicios_pageServicePackagesCustomProjectsMutation {
  description: String
  linkText: String
  linkUrl: String
}

input Servicios_pageServicePackagesMutation {
  packages: [Servicios_pageServicePackagesPackagesMutation]
  packInevitable: Servicios_pageServicePackagesPackInevitableMutation
  customProjects: Servicios_pageServicePackagesCustomProjectsMutation
}

input Servicios_pageFaqSectionQuestionsMutation {
  question: String
  answer: String
}

input Servicios_pageFaqSectionMutation {
  title: String
  subtitle: String
  questions: [Servicios_pageFaqSectionQuestionsMutation]
}

input Servicios_pageMutation {
  seo: Servicios_pageSeoMutation
  hero: Servicios_pageHeroMutation
  servicePackages: Servicios_pageServicePackagesMutation
  faqSection: Servicios_pageFaqSectionMutation
}

input Colaboraciones_agenciasSeoMutation {
  title: String
  description: String
}

input Colaboraciones_agenciasHeroMutation {
  subtitle: String
  titlePart1: String
  titlePart2: String
  description: String
  ctaText: String
  ctaLink: String
}

input Colaboraciones_agenciasTargetSectionRequirementsMutation {
  title: String
  subtitle: String
  description: String
}

input Colaboraciones_agenciasTargetSectionDisclaimerMutation {
  text1: String
}

input Colaboraciones_agenciasTargetSectionMutation {
  title: String
  intro: String
  requirements: [Colaboraciones_agenciasTargetSectionRequirementsMutation]
  disclaimer: Colaboraciones_agenciasTargetSectionDisclaimerMutation
  ctaButtonText: String
  ctaLink: String
}

input Colaboraciones_agenciasWorkflowSectionStepsMutation {
  number: String
  title: String
  description: String
}

input Colaboraciones_agenciasWorkflowSectionMutation {
  title: String
  intro: String
  steps: [Colaboraciones_agenciasWorkflowSectionStepsMutation]
}

input Colaboraciones_agenciasConditionsSectionConditionsMutation {
  title: String
  description: String
}

input Colaboraciones_agenciasConditionsSectionMutation {
  title: String
  basePrice: String
  currency: String
  priceDescription: String
  priceSubtext: String
  conditions: [Colaboraciones_agenciasConditionsSectionConditionsMutation]
  ctaLink: String
  ctaText: String
  ctaSubtext: String
}

input Colaboraciones_agenciasIncludesSectionMutation {
  heading: String
  title: String
  included: [String]
  notIncludedTitle: String
  notIncluded: [String]
  clarification: String
}

input Colaboraciones_agenciasProcessSectionStepsMutation {
  number: String
  title: String
  description: String
}

input Colaboraciones_agenciasProcessSectionMutation {
  title: String
  steps: [Colaboraciones_agenciasProcessSectionStepsMutation]
}

input Colaboraciones_agenciasFaqSectionQuestionsMutation {
  question: String
  answer: String
}

input Colaboraciones_agenciasFaqSectionMutation {
  title: String
  questions: [Colaboraciones_agenciasFaqSectionQuestionsMutation]
}

input Colaboraciones_agenciasFinalCtaSectionMutation {
  title: String
  description: String
  ctaText: String
  ctaLink: String
}

input Colaboraciones_agenciasMutation {
  seo: Colaboraciones_agenciasSeoMutation
  hero: Colaboraciones_agenciasHeroMutation
  targetSection: Colaboraciones_agenciasTargetSectionMutation
  workflowSection: Colaboraciones_agenciasWorkflowSectionMutation
  conditionsSection: Colaboraciones_agenciasConditionsSectionMutation
  includesSection: Colaboraciones_agenciasIncludesSectionMutation
  processSection: Colaboraciones_agenciasProcessSectionMutation
  faqSection: Colaboraciones_agenciasFaqSectionMutation
  finalCtaSection: Colaboraciones_agenciasFinalCtaSectionMutation
}

input Pack_inevitableSeoMutation {
  title: String
  description: String
}

input Pack_inevitableHeroMutation {
  subtitle: String
  title: String
  description: String
  ctaText: String
  ctaLink: String
}

input Pack_inevitableProblemSectionMutation {
  title: String
  content: String
  keywords: [String]
}

input Pack_inevitableWhatIncludesSectionWebRedactionMutation {
  subtitle: String
  description: String
  items: [String]
  keywords: [String]
}

input Pack_inevitableWhatIncludesSectionStrategicBlogMutation {
  subtitle: String
  description: String
  items: [String]
  keywords: [String]
}

input Pack_inevitableWhatIncludesSectionMutation {
  title: String
  subtitle: String
  webRedaction: Pack_inevitableWhatIncludesSectionWebRedactionMutation
  strategicBlog: Pack_inevitableWhatIncludesSectionStrategicBlogMutation
}

input Pack_inevitableForWhomSectionMutation {
  title: String
  subtitle: String
  items: [String]
  keywords: [String]
}

input Pack_inevitableInvestmentSectionComparisonSeparateWebCompleteMutation {
  label: String
  price: String
}

input Pack_inevitableInvestmentSectionComparisonSeparateBlogFirstMutation {
  label: String
  price: String
}

input Pack_inevitableInvestmentSectionComparisonSeparateMutation {
  webComplete: Pack_inevitableInvestmentSectionComparisonSeparateWebCompleteMutation
  blogFirst: Pack_inevitableInvestmentSectionComparisonSeparateBlogFirstMutation
  total: String
}

input Pack_inevitableInvestmentSectionComparisonPackageMutation {
  label: String
  price: String
}

input Pack_inevitableInvestmentSectionComparisonMutation {
  separate: Pack_inevitableInvestmentSectionComparisonSeparateMutation
  package: Pack_inevitableInvestmentSectionComparisonPackageMutation
  savings: String
}

input Pack_inevitableInvestmentSectionMutation {
  title: String
  comparison: Pack_inevitableInvestmentSectionComparisonMutation
  ctaText: String
  ctaLink: String
  keywords: [String]
}

input Pack_inevitableProcessSectionStepsMutation {
  number: String
  title: String
  duration: String
  description: String
}

input Pack_inevitableProcessSectionMutation {
  title: String
  steps: [Pack_inevitableProcessSectionStepsMutation]
  keywords: [String]
}

input Pack_inevitableFaqSectionQuestionsMutation {
  question: String
  answer: String
}

input Pack_inevitableFaqSectionMutation {
  title: String
  questions: [Pack_inevitableFaqSectionQuestionsMutation]
  keywords: [String]
}

input Pack_inevitableTestimonialsSectionTestimonialsMutation {
  quote: String
  author: String
}

input Pack_inevitableTestimonialsSectionMutation {
  title: String
  testimonials: [Pack_inevitableTestimonialsSectionTestimonialsMutation]
}

input Pack_inevitableFinalCtaSectionMutation {
  title: String
  description: String
  ctaText: String
  ctaLink: String
}

input Pack_inevitableMutation {
  seo: Pack_inevitableSeoMutation
  hero: Pack_inevitableHeroMutation
  problemSection: Pack_inevitableProblemSectionMutation
  whatIncludesSection: Pack_inevitableWhatIncludesSectionMutation
  forWhomSection: Pack_inevitableForWhomSectionMutation
  investmentSection: Pack_inevitableInvestmentSectionMutation
  processSection: Pack_inevitableProcessSectionMutation
  faqSection: Pack_inevitableFaqSectionMutation
  testimonialsSection: Pack_inevitableTestimonialsSectionMutation
  finalCtaSection: Pack_inevitableFinalCtaSectionMutation
}

schema {
  query: Query
  mutation: Mutation
}
